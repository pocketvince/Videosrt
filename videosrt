#!/bin/bash
if [ "$1" = "info" ]; then
if ffmpeg -i "$2" 2>&1 | grep -q "No such file: $2"; then
echo "No subtitles on the video"
else
subtitle_streams=$(ffmpeg -i "$2" -hide_banner -map 0:s -c copy -f null - 2>&1 | awk '/Stream.*Subtitle/ {print $0}')
if [ -z "$subtitle_streams" ]; then
echo "No subtitles on the video"
else
echo "Subtitles available:"
echo "$subtitle_streams"
fi
fi
exit

elif [ "$1" = "extract" ]; then
if [ -f "$2" ]; then
if [ -f "${2}.srt" ]; then
echo "Subtitle file already exists: $2.srt"
else
ffmpeg -i "$2" -map "$3" "${2}.srt" > /dev/null 2>&1
if [ $? -eq 0 ]; then
echo "Subtitles extracted successfully: $2.srt"
else
echo "Failed to extract subtitles."
fi
fi
else
echo "No such file: $2"
fi

elif [ "$1" = "convert" ]; then
if [ -e "$2.videosrt.mp4" ]; then
echo "File already converted: $2.videosrt.mp4"
elif [ ! -e "$2" ]; then
echo "No such file: $2"
elif [ ! -e "$3" ]; then
echo "No such file: $3"
else
ffmpeg -i "$2" -filter:v "subtitles=filename='$3':force_style='Fontsize=34,PrimaryColour=&H0000ffff,BorderStyle=3'" -codec:v "libx264" -codec:a "mp3" "$2.videosrt.mp4"
fi

elif [ "$1" = "convert-ov" ]; then
if [ -e "$2.videosrt-ov.mp4" ]; then
echo "File already converted: $2.videosrt-ov.mp4"
elif [ ! -e "$2" ]; then
echo "No such file: $2"
elif [ ! -e "$3" ]; then
echo "No such file: $3"
else
ffmpeg -i "$2" -filter_complex "[0:v]boxblur=10[blur];[0:v]scale=iw*0.75:-1[ovrl];[blur][ovrl]overlay=(W-w)/2:0,subtitles=filename='$3':force_style='Fontsize=34,PrimaryColour=&H0000ffff,BorderStyle=3'" -codec:v libx264 -codec:a mp3 "$2.videosrt-ov.mp4"
fi

elif [ "$1" = "convert-st" ]; then
if [ -e "$2.videosrt-st.mp4" ]; then
echo "File already converted: $2.videosrt-st.mp4"
elif [ ! -e "$2" ]; then
echo "No such file: $2"
elif [ ! -e "$3" ]; then
echo "No such file: $3"
else
ffmpeg -i "$2" -vf subtitles="$3" "$2.videosrt-st.mp4"
fi


elif [ "$1" = "extract-yt" ]; then
yt-dlp --list-subs "$2"
echo "Language:"
read language
yt-dlp --write-subs "$language" --skip-download "$2"
yt-dlp -f mp4 "$2"
exit

else
echo ''
echo 'videosrt info "video.mkv"'
echo 'Displays information about the subtitles of the specified video'
echo ''
echo 'videosrt extract "video.mkv" "0:0"'
echo 'Extracts subtitles from the specified video and saves them to an SRT file'
echo ''
echo 'videosrt convert "video.mkv" "video.mkv.srt"'
echo 'Incorporates subtitles from an SRT file into a video in large, yellow and with a black background'
echo ''
echo 'videosrt convert-ov "video.mkv" "video.mkv.srt"'
echo 'Blur the original video, and superpose at maximum height the same video reduced by 25% and include the subtitles (as on the "convert" command)'
echo ''
echo 'videosrt convert-st "video.mkv" "video.mkv.srt"'
echo 'Incorporates subtitles to the video and keeping standard size and color'
echo ''
echo 'videosrt extract-yt "link"'
echo 'Displays the list of available subtitles for a YTvideo, choose language & extracts the subtitles into an SRT file and downloads the video in mp4'
echo ''
exit 1
fi
